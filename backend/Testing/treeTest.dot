digraph G{nodo0[label="ROOT"];
Node1[label="FUNCTION"];
nodo0->Node1;
Node2[label="TYPE: void"];
Node1->Node2;
Node3[label="principal"];
Node1->Node3;
Node4[label="PARAMETERS"];
Node1->Node4;
Node5[label="SENTENCES"];
Node1->Node5;
Node6[label="CALL"];
Node5->Node6;
Node7[label="funcionwhile"];
Node6->Node7;
Node8[label="FUNCTION"];
nodo0->Node8;
Node9[label="TYPE: void"];
Node8->Node9;
Node10[label="funcionwhile"];
Node8->Node10;
Node11[label="PARAMETERS"];
Node8->Node11;
Node12[label="SENTENCES"];
Node8->Node12;
Node13[label="VARIABLE DECLARATION - T1"];
Node12->Node13;
Node14[label="TYPE: int"];
Node13->Node14;
Node15[label="IDENTIFIERS LIST"];
Node13->Node15;
Node16[label="i"];
Node15->Node16;
Node17[label=" integer: 0"];
Node13->Node17;
Node18[label="WHILE SENTENCE"];
Node12->Node18;
Node19[label="CONDITION"];
Node18->Node19;
Node20[label="BINARY EXPRESSION -> <"];
Node19->Node20;
Node21[label="i"];
Node20->Node21;
Node22[label=" integer: 100"];
Node20->Node22;
Node23[label="SENTENCES"];
Node18->Node23;
Node24[label="IF SENTENCE"];
Node23->Node24;
Node25[label="CONDITION"];
Node24->Node25;
Node26[label="BINARY EXPRESSION -> =="];
Node25->Node26;
Node27[label="i"];
Node26->Node27;
Node28[label=" integer: 15"];
Node26->Node28;
Node29[label="SENTENCES"];
Node24->Node29;
Node30[label="UNARY EXPRESSION -> ++"];
Node29->Node30;
Node31[label="i"];
Node30->Node31;
Node32[label="CONTINUE"];
Node29->Node32;
Node33[label="IF SENTENCE"];
Node24->Node33;
Node34[label="CONDITION"];
Node33->Node34;
Node35[label="BINARY EXPRESSION -> =="];
Node34->Node35;
Node36[label="i"];
Node35->Node36;
Node37[label=" integer: 30"];
Node35->Node37;
Node38[label="SENTENCES"];
Node33->Node38;
Node39[label="BREAK"];
Node38->Node39;
Node40[label="IF SENTENCE"];
Node33->Node40;
Node41[label="CONDITION"];
Node40->Node41;
Node42[label="BINARY EXPRESSION -> =="];
Node41->Node42;
Node43[label="i"];
Node42->Node43;
Node44[label=" integer: 26"];
Node42->Node44;
Node45[label="SENTENCES"];
Node40->Node45;
Node46[label="PRINT"];
Node45->Node46;
Node47[label=" string: retornando sin hacer break"];
Node46->Node47;
Node48[label="RETURN"];
Node45->Node48;
Node49[label="PRINT"];
Node23->Node49;
Node50[label="i"];
Node49->Node50;
Node51[label="PRINT"];
Node23->Node51;
Node52[label=" char: \n"];
Node51->Node52;
Node53[label="UNARY EXPRESSION -> ++"];
Node23->Node53;
Node54[label="i"];
Node53->Node54;
Node55[label="PRINT"];
Node12->Node55;
Node56[label=" string: aplicando break\n"];
Node55->Node56;
}