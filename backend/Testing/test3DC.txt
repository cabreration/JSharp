var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81, t82, t83, t84, t85, t86, t87, t88, t89, t90, t91, t92, t93, t94, t95, t96, t97, t98, t99, t100, t101, t102, t103, t104, t105, t106, t107, t108, t109, t110, t111, t112, t113, t114, t115, t116, t117, t118, t119, t120, t121, t122, t123, t124, t125, t126, t127, t128, t129, t130, t131, t132, t133, t134, t135, t136, t137, t138, t139, t140, t141, t142, t143, t144, t145, t146, t147, t148, t149, t150, t151, t152, t153, t154, t155, t156, t157, t158, t159, t160, t161, t162, t163, t164, t165, t166, t167, t168, t169, t170, t171, t172, t173, t174, t175, t176, t177, t178, t179, t180, t181, t182, t183, t184, t185, t186, t187, t188, t189, t190, t191, t192, t193, t194, t195, t196, t197, t198;
var p, h;
var heap[];
var stack[];
p = 0;
h = 1;
heap[0] = 0;

call principal_0_1;
goto L111;

proc principal_0_1 begin
t1 = h;
heap[h] = 74;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 118;
h = h + 1;
heap[h] = 105;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 0;
h = h + 1;
t2 = t1;
t3 = p + 9;
stack[t3] = t2;
p = p + 8;
call polimorphism_1_18;
t4 = stack[p];
p = p - 8;
t5 = 24;
t6 = p + 9;
stack[t6] = t5;
t7 = 1.8;
t8 = p + 10;
stack[t8] = t7;
p = p + 8;
call polimorphism_2_22;
t9 = stack[p];
p = p - 8;
t10 = p + 1;
stack[t10] = 10;
t11 = p + 2;
stack[t11] = 4.5;
t12 = p + 1;
t13 = stack[t12];
t14 = t13;
t15 = p + 9;
stack[t15] = t14;
t16 = p + 2;
t17 = stack[t16];
t18 = t17;
t19 = p + 10;
stack[t19] = t18;
p = p + 8;
call suma_2_34;
t20 = stack[p];
p = p - 8;
t21 = p + 3;
stack[t21] = t20;
t22 = h;
heap[h] = 69;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 109;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 58;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t23 = p + 3;
t24 = stack[t23];
t25 = h;
t26 = heap[t22];
L2:
if (t26 == 0) goto L3;
heap[h] = t26;
h = h + 1;
t22 = t22 + 1;
t26 = heap[t22];
goto L2;
L3:
t27 = t24; # original
t28 = t27 % 1; #parte decimal
t29 = t27 - t28; # parte entera
t30 = 0;
L4:
if (t30 == 4) goto L5;
t28 = t28 * 10;
t30 = t30 + 1;
goto L4;
L5: # agregamos la parte entera
t31 = t29; #original
t32 = 0; #acumulador
L6:
if (t31 == 0) goto L7;
t33 = t31 % 10;
t31 = t31 - t33;
t31 = t31 / 10;
t32 = t32 * 10;
t32 = t32 + t33;
goto L6;
L7:
if (t32 == 0) goto L8;
t33 = t32 % 10;
t32 = t32 - t33;
t32 = t32 / 10;
t33 = t33 + 48;
heap[h] = t33;
h = h + 1;
goto L7;
L8:
heap[h] = 46;
h = h + 1;
t34 = t28; #original
t35 = 0; #acumulador
L9:
if (t34 == 0) goto L10;
t36 = t34 % 10;
t34 = t34 - t36;
t34 = t34 / 10;
t35 = t35 * 10;
t35 = t35 + t36;
goto L9;
L10:
if (t35 == 0) goto L11;
t36 = t35 % 10;
t35 = t35 - t36;
t35 = t35 / 10;
t36 = t36 + 48;
heap[h] = t36;
h = h + 1;
goto L10;
L11:
heap[h] = 0;
h = h + 1;
t37 = h;
heap[h] = 10;
h = h + 1;
heap[h] = 0;
h = h + 1;
t38 = h;
t39 = heap[t25];
L12:
if (t39 == 0) goto L13;
heap[h] = t39;
h = h + 1;
t25 = t25 + 1;
t39 = heap[t25];
goto L12;
L13:
t40 = heap[t37];
L14:
if (t40 == 0) goto L15;
heap[h] = t40;
h = h + 1;
t37 = t37 + 1;
t40 = heap[t37];
goto L14;
L15:
heap[h] = 0;
h = h + 1;
t41 = t38;
if (t41 > 0) goto L16;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L17;
L16:
t42 = heap[t41];
if (t42 == 0) goto L17;
print("%c", t42);
t41 = t41 + 1;
goto L16;
L17:
t43 = p + 1;
t44 = stack[t43];
t45 = t44;
t46 = p + 9;
stack[t46] = t45;
t47 = p + 2;
t48 = stack[t47];
t49 = t48;
t50 = p + 10;
stack[t50] = t49;
p = p + 8;
call resta_2_38;
t51 = stack[p];
p = p - 8;
t52 = t51;
t53 = t52 % 1;
t52 = t52 - t53;
t54 = p + 4;
stack[t54] = t52;
t55 = h;
heap[h] = 69;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t56 = p + 4;
t57 = stack[t56];
t58 = h;
t59 = heap[t55];
L18:
if (t59 == 0) goto L19;
heap[h] = t59;
h = h + 1;
t55 = t55 + 1;
t59 = heap[t55];
goto L18;
L19:
t60 = t57; #original
t61 = 0; #acumulador
L20:
if (t60 == 0) goto L21;
t62 = t60 % 10;
t60 = t60 - t62;
t60 = t60 / 10;
t61 = t61 * 10;
t61 = t61 + t62;
goto L20;
L21:
if (t61 == 0) goto L22;
t62 = t61 % 10;
t61 = t61 - t62;
t61 = t61 / 10;
t62 = t62 + 48;
heap[h] = t62;
h = h + 1;
goto L21;
L22:
heap[h] = 0;
h = h + 1;
t63 = h;
heap[h] = 10;
h = h + 1;
heap[h] = 0;
h = h + 1;
t64 = h;
t65 = heap[t58];
L23:
if (t65 == 0) goto L24;
heap[h] = t65;
h = h + 1;
t58 = t58 + 1;
t65 = heap[t58];
goto L23;
L24:
t66 = heap[t63];
L25:
if (t66 == 0) goto L26;
heap[h] = t66;
h = h + 1;
t63 = t63 + 1;
t66 = heap[t63];
goto L25;
L26:
heap[h] = 0;
h = h + 1;
t67 = t64;
if (t67 > 0) goto L27;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L28;
L27:
t68 = heap[t67];
if (t68 == 0) goto L28;
print("%c", t68);
t67 = t67 + 1;
goto L27;
L28:
t69 = 2;
t70 = p + 9;
stack[t70] = t69;
t71 = 7;
t72 = p + 10;
stack[t72] = t71;
p = p + 8;
call potencia_2_42;
t73 = stack[p];
p = p - 8;
t74 = p + 5;
stack[t74] = t73;
t75 = h;
heap[h] = 69;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 112;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 110;
h = h + 1;
heap[h] = 99;
h = h + 1;
heap[h] = 105;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 58;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t76 = p + 5;
t77 = stack[t76];
t78 = h;
t79 = heap[t75];
L29:
if (t79 == 0) goto L30;
heap[h] = t79;
h = h + 1;
t75 = t75 + 1;
t79 = heap[t75];
goto L29;
L30:
t80 = t77; #original
t81 = 0; #acumulador
L31:
if (t80 == 0) goto L32;
t82 = t80 % 10;
t80 = t80 - t82;
t80 = t80 / 10;
t81 = t81 * 10;
t81 = t81 + t82;
goto L31;
L32:
if (t81 == 0) goto L33;
t82 = t81 % 10;
t81 = t81 - t82;
t81 = t81 / 10;
t82 = t82 + 48;
heap[h] = t82;
h = h + 1;
goto L32;
L33:
heap[h] = 0;
h = h + 1;
t83 = h;
heap[h] = 10;
h = h + 1;
heap[h] = 0;
h = h + 1;
t84 = h;
t85 = heap[t78];
L34:
if (t85 == 0) goto L35;
heap[h] = t85;
h = h + 1;
t78 = t78 + 1;
t85 = heap[t78];
goto L34;
L35:
t86 = heap[t83];
L36:
if (t86 == 0) goto L37;
heap[h] = t86;
h = h + 1;
t83 = t83 + 1;
t86 = heap[t83];
goto L36;
L37:
heap[h] = 0;
h = h + 1;
t87 = t84;
if (t87 > 0) goto L38;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L39;
L38:
t88 = heap[t87];
if (t88 == 0) goto L39;
print("%c", t88);
t87 = t87 + 1;
goto L38;
L39:
t89 = 7;
t90 = p + 9;
stack[t90] = t89;
p = p + 8;
call polimorphism_1_26;
t91 = stack[p];
p = p - 8;
t92 = p + 6;
stack[t92] = 45;
t93 = h;
heap[h] = 74;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 82;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 105;
h = h + 1;
heap[h] = 103;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 0;
h = h + 1;
t94 = p + 7;
stack[t94] = t93;
t95 = p + 6;
t96 = stack[t95];
t97 = t96;
t98 = p + 9;
stack[t98] = t97;
t99 = p + 7;
t100 = stack[t99];
t101 = t100;
t102 = p + 10;
stack[t102] = t101;
p = p + 8;
call polimorphism_2_30;
t103 = stack[p];
p = p - 8;
L1:
end


proc polimorphism_1_18 begin
t104 = h;
heap[h] = 89;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 110;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 109;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 105;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t105 = p + 1;
t106 = stack[t105];
t107 = h;
t108 = heap[t104];
L41:
if (t108 == 0) goto L42;
heap[h] = t108;
h = h + 1;
t104 = t104 + 1;
t108 = heap[t104];
goto L41;
L42:
t109 = heap[t106];
L43:
if (t109 == 0) goto L44;
heap[h] = t109;
h = h + 1;
t106 = t106 + 1;
t109 = heap[t106];
goto L43;
L44:
heap[h] = 0;
h = h + 1;
t110 = h;
heap[h] = 10;
h = h + 1;
heap[h] = 0;
h = h + 1;
t111 = h;
t112 = heap[t107];
L45:
if (t112 == 0) goto L46;
heap[h] = t112;
h = h + 1;
t107 = t107 + 1;
t112 = heap[t107];
goto L45;
L46:
t113 = heap[t110];
L47:
if (t113 == 0) goto L48;
heap[h] = t113;
h = h + 1;
t110 = t110 + 1;
t113 = heap[t110];
goto L47;
L48:
heap[h] = 0;
h = h + 1;
t114 = t111;
if (t114 > 0) goto L49;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L50;
L49:
t115 = heap[t114];
if (t115 == 0) goto L50;
print("%c", t115);
t114 = t114 + 1;
goto L49;
L50:
L40:
end


proc polimorphism_2_22 begin
t116 = h;
heap[h] = 89;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 39;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t117 = p + 1;
t118 = stack[t117];
t119 = h;
t120 = heap[t116];
L52:
if (t120 == 0) goto L53;
heap[h] = t120;
h = h + 1;
t116 = t116 + 1;
t120 = heap[t116];
goto L52;
L53:
t121 = t118; #original
t122 = 0; #acumulador
L54:
if (t121 == 0) goto L55;
t123 = t121 % 10;
t121 = t121 - t123;
t121 = t121 / 10;
t122 = t122 * 10;
t122 = t122 + t123;
goto L54;
L55:
if (t122 == 0) goto L56;
t123 = t122 % 10;
t122 = t122 - t123;
t122 = t122 / 10;
t123 = t123 + 48;
heap[h] = t123;
h = h + 1;
goto L55;
L56:
heap[h] = 0;
h = h + 1;
t124 = h;
heap[h] = 32;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 110;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t125 = h;
t126 = heap[t119];
L57:
if (t126 == 0) goto L58;
heap[h] = t126;
h = h + 1;
t119 = t119 + 1;
t126 = heap[t119];
goto L57;
L58:
t127 = heap[t124];
L59:
if (t127 == 0) goto L60;
heap[h] = t127;
h = h + 1;
t124 = t124 + 1;
t127 = heap[t124];
goto L59;
L60:
heap[h] = 0;
h = h + 1;
t128 = p + 2;
t129 = stack[t128];
t130 = h;
t131 = heap[t125];
L61:
if (t131 == 0) goto L62;
heap[h] = t131;
h = h + 1;
t125 = t125 + 1;
t131 = heap[t125];
goto L61;
L62:
t132 = t129; # original
t133 = t132 % 1; #parte decimal
t134 = t132 - t133; # parte entera
t135 = 0;
L63:
if (t135 == 4) goto L64;
t133 = t133 * 10;
t135 = t135 + 1;
goto L63;
L64: # agregamos la parte entera
t136 = t134; #original
t137 = 0; #acumulador
L65:
if (t136 == 0) goto L66;
t138 = t136 % 10;
t136 = t136 - t138;
t136 = t136 / 10;
t137 = t137 * 10;
t137 = t137 + t138;
goto L65;
L66:
if (t137 == 0) goto L67;
t138 = t137 % 10;
t137 = t137 - t138;
t137 = t137 / 10;
t138 = t138 + 48;
heap[h] = t138;
h = h + 1;
goto L66;
L67:
heap[h] = 46;
h = h + 1;
t139 = t133; #original
t140 = 0; #acumulador
L68:
if (t139 == 0) goto L69;
t141 = t139 % 10;
t139 = t139 - t141;
t139 = t139 / 10;
t140 = t140 * 10;
t140 = t140 + t141;
goto L68;
L69:
if (t140 == 0) goto L70;
t141 = t140 % 10;
t140 = t140 - t141;
t140 = t140 / 10;
t141 = t141 + 48;
heap[h] = t141;
h = h + 1;
goto L69;
L70:
heap[h] = 0;
h = h + 1;
t142 = h;
heap[h] = 32;
h = h + 1;
heap[h] = 109;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 10;
h = h + 1;
heap[h] = 0;
h = h + 1;
t143 = h;
t144 = heap[t130];
L71:
if (t144 == 0) goto L72;
heap[h] = t144;
h = h + 1;
t130 = t130 + 1;
t144 = heap[t130];
goto L71;
L72:
t145 = heap[t142];
L73:
if (t145 == 0) goto L74;
heap[h] = t145;
h = h + 1;
t142 = t142 + 1;
t145 = heap[t142];
goto L73;
L74:
heap[h] = 0;
h = h + 1;
t146 = t143;
if (t146 > 0) goto L75;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L76;
L75:
t147 = heap[t146];
if (t147 == 0) goto L76;
print("%c", t147);
t146 = t146 + 1;
goto L75;
L76:
L51:
end


proc polimorphism_1_26 begin
t148 = h;
heap[h] = 84;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 110;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 109;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 102;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 118;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 105;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t149 = p + 1;
t150 = stack[t149];
t151 = h;
t152 = heap[t148];
L78:
if (t152 == 0) goto L79;
heap[h] = t152;
h = h + 1;
t148 = t148 + 1;
t152 = heap[t148];
goto L78;
L79:
t153 = t150; #original
t154 = 0; #acumulador
L80:
if (t153 == 0) goto L81;
t155 = t153 % 10;
t153 = t153 - t155;
t153 = t153 / 10;
t154 = t154 * 10;
t154 = t154 + t155;
goto L80;
L81:
if (t154 == 0) goto L82;
t155 = t154 % 10;
t154 = t154 - t155;
t154 = t154 / 10;
t155 = t155 + 48;
heap[h] = t155;
h = h + 1;
goto L81;
L82:
heap[h] = 0;
h = h + 1;
t156 = h;
heap[h] = 10;
h = h + 1;
heap[h] = 0;
h = h + 1;
t157 = h;
t158 = heap[t151];
L83:
if (t158 == 0) goto L84;
heap[h] = t158;
h = h + 1;
t151 = t151 + 1;
t158 = heap[t151];
goto L83;
L84:
t159 = heap[t156];
L85:
if (t159 == 0) goto L86;
heap[h] = t159;
h = h + 1;
t156 = t156 + 1;
t159 = heap[t156];
goto L85;
L86:
heap[h] = 0;
h = h + 1;
t160 = t157;
if (t160 > 0) goto L87;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L88;
L87:
t161 = heap[t160];
if (t161 == 0) goto L88;
print("%c", t161);
t160 = t160 + 1;
goto L87;
L88:
L77:
end


proc polimorphism_2_30 begin
t162 = h;
heap[h] = 84;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 110;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 109;
h = h + 1;
heap[h] = 98;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 58;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t163 = p + 2;
t164 = stack[t163];
t165 = h;
t166 = heap[t162];
L90:
if (t166 == 0) goto L91;
heap[h] = t166;
h = h + 1;
t162 = t162 + 1;
t166 = heap[t162];
goto L90;
L91:
t167 = heap[t164];
L92:
if (t167 == 0) goto L93;
heap[h] = t167;
h = h + 1;
t164 = t164 + 1;
t167 = heap[t164];
goto L92;
L93:
heap[h] = 0;
h = h + 1;
t168 = h;
heap[h] = 32;
h = h + 1;
heap[h] = 121;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 58;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t169 = h;
t170 = heap[t165];
L94:
if (t170 == 0) goto L95;
heap[h] = t170;
h = h + 1;
t165 = t165 + 1;
t170 = heap[t165];
goto L94;
L95:
t171 = heap[t168];
L96:
if (t171 == 0) goto L97;
heap[h] = t171;
h = h + 1;
t168 = t168 + 1;
t171 = heap[t168];
goto L96;
L97:
heap[h] = 0;
h = h + 1;
t172 = p + 1;
t173 = stack[t172];
t174 = h;
t175 = heap[t169];
L98:
if (t175 == 0) goto L99;
heap[h] = t175;
h = h + 1;
t169 = t169 + 1;
t175 = heap[t169];
goto L98;
L99:
t176 = t173; #original
t177 = 0; #acumulador
L100:
if (t176 == 0) goto L101;
t178 = t176 % 10;
t176 = t176 - t178;
t176 = t176 / 10;
t177 = t177 * 10;
t177 = t177 + t178;
goto L100;
L101:
if (t177 == 0) goto L102;
t178 = t177 % 10;
t177 = t177 - t178;
t177 = t177 / 10;
t178 = t178 + 48;
heap[h] = t178;
h = h + 1;
goto L101;
L102:
heap[h] = 0;
h = h + 1;
t179 = t174;
if (t179 > 0) goto L103;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L104;
L103:
t180 = heap[t179];
if (t180 == 0) goto L104;
print("%c", t180);
t179 = t179 + 1;
goto L103;
L104:
L89:
end


proc suma_2_34 begin
t181 = p + 1;
t182 = stack[t181];
t183 = p + 2;
t184 = stack[t183];
t185 = t182 + t184;
stack[p] = t185;
goto L105;
L105:
end


proc resta_2_38 begin
t186 = p + 1;
t187 = stack[t186];
t188 = p + 2;
t189 = stack[t188];
t190 = t187 - t189;
stack[p] = t190;
goto L106;
L106:
end


proc potencia_2_42 begin
t191 = p + 1;
t192 = stack[t191];
t193 = p + 2;
t194 = stack[t193];
t195 = t192;
t196 = t192;
t197 = t194;
L108:
if (t197 > 1) goto L109;
goto L110;
L109:
t196 = t196 * t195;
t197 = t197 - 1;
goto L108;
L110:
stack[p] = t196;
goto L107;
L107:
end


L111:
