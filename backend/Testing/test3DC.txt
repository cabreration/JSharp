var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81, t82, t83, t84, t85, t86, t87, t88, t89, t90, t91, t92, t93, t94, t95, t96, t97, t98, t99, t100, t101, t102, t103, t104, t105, t106, t107, t108, t109, t110, t111, t112, t113, t114, t115, t116, t117, t118, t119, t120, t121, t122, t123, t124, t125, t126, t127, t128, t129, t130, t131, t132, t133, t134, t135, t136, t137, t138, t139, t140, t141, t142, t143, t144, t145, t146, t147, t148, t149, t150;
var p, h;
var heap[];
var stack[];
p = 0;
h = 1;
heap[0] = 0;

call principal_0_1;
goto L83;

proc principal_0_1 begin
t1 = h;
heap[h] = 74;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 118;
h = h + 1;
heap[h] = 105;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 0;
h = h + 1;
t2 = t1;
t3 = p + 7;
stack[t3] = t2;
p = p + 6;
call polimorphism_1_14;
t4 = stack[p];
p = p - 6;
t5 = 24;
t6 = p + 7;
stack[t6] = t5;
t7 = 1.8;
t8 = p + 8;
stack[t8] = t7;
p = p + 6;
call polimorphism_2_18;
t9 = stack[p];
p = p - 6;
t10 = p + 1;
stack[t10] = 10;
t11 = p + 2;
stack[t11] = 4.5;
t12 = p + 1;
t13 = stack[t12];
t14 = t13;
t15 = p + 7;
stack[t15] = t14;
t16 = p + 2;
t17 = stack[t16];
t18 = t17;
t19 = p + 8;
stack[t19] = t18;
p = p + 6;
call suma_2_22;
t20 = stack[p];
p = p - 6;
t21 = p + 3;
stack[t21] = t20;
t22 = h;
heap[h] = 69;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 109;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 58;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t23 = p + 3;
t24 = stack[t23];
t25 = h;
t26 = heap[t22];
L2:
if (t26 == 0) goto L3;
heap[h] = t26;
h = h + 1;
t22 = t22 + 1;
t26 = heap[t22];
goto L2;
L3:
t27 = t24; # original
t28 = t27 % 1; #parte decimal
t29 = t27 - t28; # parte entera
t30 = 0;
L4:
if (t30 == 4) goto L5;
t28 = t28 * 10;
t30 = t30 + 1;
goto L4;
L5: # agregamos la parte entera
t31 = t29; #original
t32 = 0; #acumulador
L6:
if (t31 == 0) goto L7;
t33 = t31 % 10;
t31 = t31 - t33;
t31 = t31 / 10;
t32 = t32 * 10;
t32 = t32 + t33;
goto L6;
L7:
if (t32 == 0) goto L8;
t33 = t32 % 10;
t32 = t32 - t33;
t32 = t32 / 10;
t33 = t33 + 48;
heap[h] = t33;
h = h + 1;
goto L7;
L8:
heap[h] = 46;
h = h + 1;
t34 = t28; #original
t35 = 0; #acumulador
L9:
if (t34 == 0) goto L10;
t36 = t34 % 10;
t34 = t34 - t36;
t34 = t34 / 10;
t35 = t35 * 10;
t35 = t35 + t36;
goto L9;
L10:
if (t35 == 0) goto L11;
t36 = t35 % 10;
t35 = t35 - t36;
t35 = t35 / 10;
t36 = t36 + 48;
heap[h] = t36;
h = h + 1;
goto L10;
L11:
heap[h] = 0;
h = h + 1;
t37 = h;
heap[h] = 10;
h = h + 1;
heap[h] = 0;
h = h + 1;
t38 = h;
t39 = heap[t25];
L12:
if (t39 == 0) goto L13;
heap[h] = t39;
h = h + 1;
t25 = t25 + 1;
t39 = heap[t25];
goto L12;
L13:
t40 = heap[t37];
L14:
if (t40 == 0) goto L15;
heap[h] = t40;
h = h + 1;
t37 = t37 + 1;
t40 = heap[t37];
goto L14;
L15:
heap[h] = 0;
h = h + 1;
t41 = t38;
if (t41 > 0) goto L16;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L17;
L16:
t42 = heap[t41];
if (t42 == 0) goto L17;
print("%c", t42);
t41 = t41 + 1;
goto L16;
L17:
t43 = p + 1;
t44 = stack[t43];
t45 = t44;
t46 = p + 7;
stack[t46] = t45;
t47 = p + 2;
t48 = stack[t47];
t49 = t48;
t50 = p + 8;
stack[t50] = t49;
p = p + 6;
call resta_2_26;
t51 = stack[p];
p = p - 6;
t52 = t51;
t53 = t52 % 1;
t52 = t52 - t53;
t54 = p + 4;
stack[t54] = t52;
t55 = h;
heap[h] = 69;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t56 = p + 4;
t57 = stack[t56];
t58 = h;
t59 = heap[t55];
L18:
if (t59 == 0) goto L19;
heap[h] = t59;
h = h + 1;
t55 = t55 + 1;
t59 = heap[t55];
goto L18;
L19:
t60 = t57; #original
t61 = 0; #acumulador
L20:
if (t60 == 0) goto L21;
t62 = t60 % 10;
t60 = t60 - t62;
t60 = t60 / 10;
t61 = t61 * 10;
t61 = t61 + t62;
goto L20;
L21:
if (t61 == 0) goto L22;
t62 = t61 % 10;
t61 = t61 - t62;
t61 = t61 / 10;
t62 = t62 + 48;
heap[h] = t62;
h = h + 1;
goto L21;
L22:
heap[h] = 0;
h = h + 1;
t63 = h;
heap[h] = 10;
h = h + 1;
heap[h] = 0;
h = h + 1;
t64 = h;
t65 = heap[t58];
L23:
if (t65 == 0) goto L24;
heap[h] = t65;
h = h + 1;
t58 = t58 + 1;
t65 = heap[t58];
goto L23;
L24:
t66 = heap[t63];
L25:
if (t66 == 0) goto L26;
heap[h] = t66;
h = h + 1;
t63 = t63 + 1;
t66 = heap[t63];
goto L25;
L26:
heap[h] = 0;
h = h + 1;
t67 = t64;
if (t67 > 0) goto L27;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L28;
L27:
t68 = heap[t67];
if (t68 == 0) goto L28;
print("%c", t68);
t67 = t67 + 1;
goto L27;
L28:
t69 = 2;
t70 = p + 7;
stack[t70] = t69;
t71 = 7;
t72 = p + 8;
stack[t72] = t71;
p = p + 6;
call potencia_2_30;
t73 = stack[p];
p = p - 6;
t74 = p + 5;
stack[t74] = t73;
t75 = h;
heap[h] = 69;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 112;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 110;
h = h + 1;
heap[h] = 99;
h = h + 1;
heap[h] = 105;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 58;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t76 = p + 5;
t77 = stack[t76];
t78 = h;
t79 = heap[t75];
L29:
if (t79 == 0) goto L30;
heap[h] = t79;
h = h + 1;
t75 = t75 + 1;
t79 = heap[t75];
goto L29;
L30:
t80 = t77; #original
t81 = 0; #acumulador
L31:
if (t80 == 0) goto L32;
t82 = t80 % 10;
t80 = t80 - t82;
t80 = t80 / 10;
t81 = t81 * 10;
t81 = t81 + t82;
goto L31;
L32:
if (t81 == 0) goto L33;
t82 = t81 % 10;
t81 = t81 - t82;
t81 = t81 / 10;
t82 = t82 + 48;
heap[h] = t82;
h = h + 1;
goto L32;
L33:
heap[h] = 0;
h = h + 1;
t83 = h;
heap[h] = 10;
h = h + 1;
heap[h] = 0;
h = h + 1;
t84 = h;
t85 = heap[t78];
L34:
if (t85 == 0) goto L35;
heap[h] = t85;
h = h + 1;
t78 = t78 + 1;
t85 = heap[t78];
goto L34;
L35:
t86 = heap[t83];
L36:
if (t86 == 0) goto L37;
heap[h] = t86;
h = h + 1;
t83 = t83 + 1;
t86 = heap[t83];
goto L36;
L37:
heap[h] = 0;
h = h + 1;
t87 = t84;
if (t87 > 0) goto L38;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L39;
L38:
t88 = heap[t87];
if (t88 == 0) goto L39;
print("%c", t88);
t87 = t87 + 1;
goto L38;
L39:
L1:
end


proc polimorphism_1_14 begin
t89 = h;
heap[h] = 89;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 110;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 109;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 105;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t90 = p + 1;
t91 = stack[t90];
t92 = h;
t93 = heap[t89];
L41:
if (t93 == 0) goto L42;
heap[h] = t93;
h = h + 1;
t89 = t89 + 1;
t93 = heap[t89];
goto L41;
L42:
t94 = heap[t91];
L43:
if (t94 == 0) goto L44;
heap[h] = t94;
h = h + 1;
t91 = t91 + 1;
t94 = heap[t91];
goto L43;
L44:
heap[h] = 0;
h = h + 1;
t95 = h;
heap[h] = 10;
h = h + 1;
heap[h] = 0;
h = h + 1;
t96 = h;
t97 = heap[t92];
L45:
if (t97 == 0) goto L46;
heap[h] = t97;
h = h + 1;
t92 = t92 + 1;
t97 = heap[t92];
goto L45;
L46:
t98 = heap[t95];
L47:
if (t98 == 0) goto L48;
heap[h] = t98;
h = h + 1;
t95 = t95 + 1;
t98 = heap[t95];
goto L47;
L48:
heap[h] = 0;
h = h + 1;
t99 = t96;
if (t99 > 0) goto L49;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L50;
L49:
t100 = heap[t99];
if (t100 == 0) goto L50;
print("%c", t100);
t99 = t99 + 1;
goto L49;
L50:
L40:
end


proc polimorphism_2_18 begin
t101 = h;
heap[h] = 89;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 117;
h = h + 1;
heap[h] = 39;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t102 = p + 1;
t103 = stack[t102];
t104 = h;
t105 = heap[t101];
L52:
if (t105 == 0) goto L53;
heap[h] = t105;
h = h + 1;
t101 = t101 + 1;
t105 = heap[t101];
goto L52;
L53:
t106 = t103; #original
t107 = 0; #acumulador
L54:
if (t106 == 0) goto L55;
t108 = t106 % 10;
t106 = t106 - t108;
t106 = t106 / 10;
t107 = t107 * 10;
t107 = t107 + t108;
goto L54;
L55:
if (t107 == 0) goto L56;
t108 = t107 % 10;
t107 = t107 - t108;
t107 = t107 / 10;
t108 = t108 + 48;
heap[h] = t108;
h = h + 1;
goto L55;
L56:
heap[h] = 0;
h = h + 1;
t109 = h;
heap[h] = 32;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 110;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 0;
h = h + 1;
t110 = h;
t111 = heap[t104];
L57:
if (t111 == 0) goto L58;
heap[h] = t111;
h = h + 1;
t104 = t104 + 1;
t111 = heap[t104];
goto L57;
L58:
t112 = heap[t109];
L59:
if (t112 == 0) goto L60;
heap[h] = t112;
h = h + 1;
t109 = t109 + 1;
t112 = heap[t109];
goto L59;
L60:
heap[h] = 0;
h = h + 1;
t113 = p + 2;
t114 = stack[t113];
t115 = h;
t116 = heap[t110];
L61:
if (t116 == 0) goto L62;
heap[h] = t116;
h = h + 1;
t110 = t110 + 1;
t116 = heap[t110];
goto L61;
L62:
t117 = t114; # original
t118 = t117 % 1; #parte decimal
t119 = t117 - t118; # parte entera
t120 = 0;
L63:
if (t120 == 4) goto L64;
t118 = t118 * 10;
t120 = t120 + 1;
goto L63;
L64: # agregamos la parte entera
t121 = t119; #original
t122 = 0; #acumulador
L65:
if (t121 == 0) goto L66;
t123 = t121 % 10;
t121 = t121 - t123;
t121 = t121 / 10;
t122 = t122 * 10;
t122 = t122 + t123;
goto L65;
L66:
if (t122 == 0) goto L67;
t123 = t122 % 10;
t122 = t122 - t123;
t122 = t122 / 10;
t123 = t123 + 48;
heap[h] = t123;
h = h + 1;
goto L66;
L67:
heap[h] = 46;
h = h + 1;
t124 = t118; #original
t125 = 0; #acumulador
L68:
if (t124 == 0) goto L69;
t126 = t124 % 10;
t124 = t124 - t126;
t124 = t124 / 10;
t125 = t125 * 10;
t125 = t125 + t126;
goto L68;
L69:
if (t125 == 0) goto L70;
t126 = t125 % 10;
t125 = t125 - t126;
t125 = t125 / 10;
t126 = t126 + 48;
heap[h] = t126;
h = h + 1;
goto L69;
L70:
heap[h] = 0;
h = h + 1;
t127 = h;
heap[h] = 32;
h = h + 1;
heap[h] = 109;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 32;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 10;
h = h + 1;
heap[h] = 0;
h = h + 1;
t128 = h;
t129 = heap[t115];
L71:
if (t129 == 0) goto L72;
heap[h] = t129;
h = h + 1;
t115 = t115 + 1;
t129 = heap[t115];
goto L71;
L72:
t130 = heap[t127];
L73:
if (t130 == 0) goto L74;
heap[h] = t130;
h = h + 1;
t127 = t127 + 1;
t130 = heap[t127];
goto L73;
L74:
heap[h] = 0;
h = h + 1;
t131 = t128;
if (t131 > 0) goto L75;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L76;
L75:
t132 = heap[t131];
if (t132 == 0) goto L76;
print("%c", t132);
t131 = t131 + 1;
goto L75;
L76:
L51:
end


proc suma_2_22 begin
t133 = p + 1;
t134 = stack[t133];
t135 = p + 2;
t136 = stack[t135];
t137 = t134 + t136;
stack[p] = t137;
goto L77;
L77:
end


proc resta_2_26 begin
t138 = p + 1;
t139 = stack[t138];
t140 = p + 2;
t141 = stack[t140];
t142 = t139 - t141;
stack[p] = t142;
goto L78;
L78:
end


proc potencia_2_30 begin
t143 = p + 1;
t144 = stack[t143];
t145 = p + 2;
t146 = stack[t145];
t147 = t144;
t148 = t144;
t149 = t146;
L80:
if (t149 > 1) goto L81;
goto L82;
L81:
t148 = t148 * t147;
t149 = t149 - 1;
goto L80;
L82:
stack[p] = t148;
goto L79;
L79:
end


L83:
