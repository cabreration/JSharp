var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81, t82, t83, t84, t85, t86, t87, t88, t89, t90, t91, t92, t93, t94, t95, t96, t97, t98, t99, t100, t101, t102, t103, t104, t105, t106, t107, t108, t109, t110, t111, t112, t113, t114, t115, t116, t117, t118, t119, t120, t121, t122, t123, t124, t125, t126, t127, t128, t129, t130, t131, t132, t133, t134, t135, t136, t137, t138, t139, t140, t141, t142, t143, t144, t145, t146, t147, t148, t149, t150, t151, t152, t153, t154, t155, t156, t157, t158, t159, t160, t161, t162, t163, t164, t165, t166, t167, t168, t169, t170, t171, t172, t173, t174, t175, t176, t177, t178, t179, t180, t181, t182, t183, t184, t185, t186, t187, t188, t189, t190, t191, t192, t193, t194, t195, t196, t197, t198, t199, t200, t201, t202, t203, t204, t205, t206, t207, t208, t209, t210, t211, t212, t213, t214, t215;
var p, h;
var heap[];
var stack[];
p = 0;
h = 1;
heap[0] = 0;

call principal_0_1;
goto L49;

proc principal_0_1 begin
t1 = h;
heap[h] = 69;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 114;
h = h + 1;
heap[h] = 110;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 99;
h = h + 1;
heap[h] = 108;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 105;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 109;
h = h + 1;
heap[h] = 97;
h = h + 1;
heap[h] = 115;
h = h + 1;
heap[h] = 116;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 105;
h = h + 1;
heap[h] = 100;
h = h + 1;
heap[h] = 101;
h = h + 1;
heap[h] = 111;
h = h + 1;
heap[h] = 0;
h = h + 1;
t2 = p + 1;
stack[t2] = t1;
t3 = p + 1;
t4 = stack[t3];
t5 = t4;
t6 = p + 4;
stack[t6] = t5;
p = p + 3;
call ordenarcadena_1_7;
t7 = stack[p];
p = p - 3;
t8 = p + 2;
stack[t8] = t7;
t9 = p + 2;
t10 = stack[t9];
t11 = t10;
if (t11 > 0) goto L2;
print("%c", 110);
print("%c", 117);
print("%c", 108);
print("%c", 108);
goto L3;
L2:
t12 = heap[t11];
if (t12 == 0) goto L3;
print("%c", t12);
t11 = t11 + 1;
goto L2;
L3:
L1:
end


proc ordenarcadena_1_7 begin
t14 = p - 0;
t15 = t14 + 1;
t13 = stack[t15];
t16 = h;
t17 = t13;
L5:
t18 = heap[t17];
if (t18 == 0) goto L6;
if (t18 < 65) goto L7;
if (t18 > 90) goto L7;
if (t18 == 165) goto L8;
t18 = t18 + 32;
goto L7;
L8:
t18 = 164;
L7:
heap[h] = t18;
h = h + 1;
t17 = t17 + 1;
goto L5;
L6:
heap[h] = 0;
h = h + 1;
t19 = t16;
t20 = 0;
L9:
t21 = heap[t19];
if (t21 == 0) goto L10;
t20 = t20 + 1;
t19 = t19 + 1;
goto L9;
L10:
t24 = h;
heap[h] = t20;
h = h + 1;
t22 = t16;
L11:
t23 = heap[t22];
if (t23 == 0) goto L12;
heap[h] = t23;
h = h + 1;
t22 = t22 + 1;
goto L11;
L12:
t25 = p + 2;
stack[t25] = t24;
t27 = p - 0;
t28 = t27 + 2;
t26 = stack[t28];
t29 = heap[t26];
t26 = t29;
t31 = h;
t30 = t26;
heap[h] = t30;
h = h + 1;
L13:
if (t30 == 0) goto L14;
heap[h] = 0;
h = h + 1;
t30 = t30 - 1;
goto L13;
L14:
t32 = p + 3;
stack[t32] = t31;
p = p + 5;
t33 = p + 0;
stack[t33] = 0;
L15:
t34 = p + 0;
t35 = stack[t34];
t37 = p - 5;
t38 = t37 + 2;
t36 = stack[t38];
t39 = heap[t36];
t36 = t39;
if (t35 < t36) goto L18;
t40 = 0;
goto L19;
L18:
t40 = 1;
L19:
t41 = t40;
if (t41 == 0) goto L16;
t43 = p - 5;
t44 = t43 + 3;
t42 = stack[t44];
t45 = p + 0;
t46 = stack[t45];
t47 = t46 + 1;
t42 = t42 + t47;
t49 = p - 5;
t50 = t49 + 2;
t48 = stack[t50];
t51 = p + 0;
t52 = stack[t51];
t53 = t52 + 1;
t48 = t48 + t53;
t48 = heap[t48];
heap[t42] = t48;
L17:
t54 = p + 0;
t55 = stack[t54];
t56 = p - 0;
t57 = t56 + 0;
t58 = stack[t57];
t58 = t58 + 1;
stack[t57] = t58;
t58 = t58 - 1;
goto L15;
L16:
p = p - 5;
t59 = p + 3;
t60 = stack[t59];
t61 = 1;
t62 = heap[t60];
t62 = t62 + 1;
print("%c", 91);
print("%c", 32);
L20:
if (t61 == t62) goto L21;
t63 = t60 + t61;
t64 = heap[t63];
print("%i", t64);
print("%c", 32);
t61 = t61 + 1;
goto L20;
L21:
print("%c", 93);
t65 = p + 3;
t66 = stack[t65];
t67 = t66;
t68 = p + 6;
stack[t68] = t67;
p = p + 5;
call bubblesort_1_26;
t69 = stack[p];
p = p - 5;
t70 = h;
heap[h] = 0;
h = h + 1;
t71 = p + 4;
stack[t71] = t70;
p = p + 5;
t72 = p + 0;
stack[t72] = 0;
L22:
t73 = p + 0;
t74 = stack[t73];
t76 = p - 5;
t77 = t76 + 3;
t75 = stack[t77];
t78 = heap[t75];
t75 = t78;
if (t74 < t75) goto L25;
t79 = 0;
goto L26;
L25:
t79 = 1;
L26:
t80 = t79;
if (t80 == 0) goto L23;
t82 = p - 5;
t83 = t82 + 2;
t81 = stack[t83];
t84 = p + 0;
t85 = stack[t84];
t86 = t85 + 1;
t81 = t81 + t86;
t88 = p - 5;
t89 = t88 + 3;
t87 = stack[t89];
t90 = p + 0;
t91 = stack[t90];
t92 = t91 + 1;
t87 = t87 + t92;
t87 = heap[t87];
heap[t81] = t87;
L24:
t95 = p + 0;
t96 = stack[t95];
t97 = p - 0;
t98 = t97 + 0;
t99 = stack[t98];
t99 = t99 + 1;
stack[t98] = t99;
t99 = t99 - 1;
goto L22;
L23:
p = p - 5;
p = p + 5;
t100 = p + 0;
stack[t100] = 0;
L27:
t101 = p + 0;
t102 = stack[t101];
t104 = p - 5;
t105 = t104 + 2;
t103 = stack[t105];
t106 = heap[t103];
t103 = t106;
if (t102 < t103) goto L30;
t107 = 0;
goto L31;
L30:
t107 = 1;
L31:
t108 = t107;
if (t108 == 0) goto L28;
t109 = p - 5;
t110 = t109 + 4;
t111 = stack[t110];
t113 = p - 5;
t114 = t113 + 2;
t112 = stack[t114];
t115 = p + 0;
t116 = stack[t115];
t117 = t116 + 1;
t112 = t112 + t117;
t112 = heap[t112];
t118 = h;
t119 = heap[t111];
L32:
if (t119 == 0) goto L33;
heap[h] = t119;
h = h + 1;
t111 = t111 + 1;
t119 = heap[t111];
goto L32;
L33:
heap[h] = t112;
h = h + 1;
heap[h] = 0;
h = h + 1;
t120 = p - 5;
t121 = t120 + 4;
stack[t121] = t118;
L29:
t122 = p + 0;
t123 = stack[t122];
t124 = p - 0;
t125 = t124 + 0;
t126 = stack[t125];
t126 = t126 + 1;
stack[t125] = t126;
t126 = t126 - 1;
goto L27;
L28:
p = p - 5;
t127 = p + 4;
t128 = stack[t127];
t129 = p - 0;
stack[t129] = t128;
goto L4;
L4:
end


proc bubblesort_1_26 begin
t131 = p - 0;
t132 = t131 + 1;
t130 = stack[t132];
t133 = heap[t130];
t130 = t133;
t134 = p + 2;
stack[t134] = t130;
p = p + 3;
t135 = p + 0;
stack[t135] = 0;
L35:
t136 = p + 0;
t137 = stack[t136];
t138 = p - 3;
t139 = t138 + 2;
t140 = stack[t139];

t141 = t140 - 1;
if (t137 < t141) goto L38;
t142 = 0;
goto L39;
L38:
t142 = 1;
L39:
t143 = t142;
if (t143 == 0) goto L36;
p = p + 1;
t144 = p + 0;
stack[t144] = 0;
L40:
t145 = p + 0;
t146 = stack[t145];
t147 = p - 4;
t148 = t147 + 2;
t149 = stack[t148];
t150 = p - 1;
t151 = t150 + 0;
t152 = stack[t151];
t153 = t149 - t152;

t154 = t153 - 1;
if (t146 < t154) goto L43;
t155 = 0;
goto L44;
L43:
t155 = 1;
L44:
t156 = t155;
if (t156 == 0) goto L41;
t158 = p - 4;
t159 = t158 + 1;
t157 = stack[t159];
t160 = p + 0;
t161 = stack[t160];
t162 = t161 + 1;
t157 = t157 + t162;
t157 = heap[t157];
t164 = p - 4;
t165 = t164 + 1;
t163 = stack[t165];
t166 = p + 0;
t167 = stack[t166];

t168 = t167 + 1;
t169 = t168 + 1;
t163 = t163 + t169;
t163 = heap[t163];
if (t157 > t163) goto L46;
t170 = 0;
goto L47;
L46:
t170 = 1;
L47:
t171 = t170;
if (t171 == 0) goto L48;
p = p + 1;
t173 = p - 5;
t174 = t173 + 1;
t172 = stack[t174];
t175 = p - 1;
t176 = t175 + 0;
t177 = stack[t176];
t178 = t177 + 1;
t172 = t172 + t178;
t172 = heap[t172];
t179 = p + 0;
stack[t179] = t172;
t181 = p - 5;
t182 = t181 + 1;
t180 = stack[t182];
t183 = p - 1;
t184 = t183 + 0;
t185 = stack[t184];
t186 = t185 + 1;
t180 = t180 + t186;
t188 = p - 5;
t189 = t188 + 1;
t187 = stack[t189];
t190 = p - 1;
t191 = t190 + 0;
t192 = stack[t191];

t193 = t192 + 1;
t194 = t193 + 1;
t187 = t187 + t194;
t187 = heap[t187];
heap[t180] = t187;
t196 = p - 5;
t197 = t196 + 1;
t195 = stack[t197];
t198 = p - 1;
t199 = t198 + 0;
t200 = stack[t199];

t201 = t200 + 1;
t202 = t201 + 1;
t195 = t195 + t202;
t203 = p + 0;
t204 = stack[t203];
heap[t195] = t204;
p = p - 1;
goto L45;
L48:
L45:
L42:
t205 = p + 0;
t206 = stack[t205];
t207 = p - 0;
t208 = t207 + 0;
t209 = stack[t208];
t209 = t209 + 1;
stack[t208] = t209;
t209 = t209 - 1;
goto L40;
L41:
p = p - 1;
t210 = p + 0;
t211 = stack[t210];
t212 = p - 0;
t213 = t212 + 0;
t214 = stack[t213];
t214 = t214 + 1;
stack[t213] = t214;
t214 = t214 - 1;
L37:
goto L35;
L36:
p = p - 3;
L34:
end


L49:
